implement Command;
include "cmd.m";

NBUF:	con 100;

morse := array[] of  {
" ", "!", "\"", "#", "$", "%", "&", "'",
"(", ")", "*", "+", ",", "-", ".", "/",
"-----", ".----", "..---", "...--",  "....-",
".....",  "-....", "--...", "---..",  "----.",
":", ";", "<", "=", ">", "?", "@",
 ".-",  "-...",  "-.-.",
 "-..",  ".",  "..-.",  "--.",  "....",
 "..",  ".---",  "-.-",  ".-..",  "--",  "-.",
 "---",  ".--.",  "--.-",  ".-." , "...",  "-",
 "..-",  "...-",  ".--",  "-..-",  "-.--",  "--..",
"[", "\\", "]", "^", "_", "`",
 ".-",  "-...",  "-.-.",
 "-..",  ".",  "..-.",  "--.",  "....",
 "..",  ".---",  "-.-",  ".-..",  "--",  "-.",
 "---",  ".--.",  "--.-",  ".-." , "...",  "-",
 "..-",  "...-",  ".--",  "-..-",  "-.--",  "--..",
"{", "|", "}", "~"
};

main(nil: list of string)
{
	stdin := fildes(0);
	buf := array[NBUF] of byte;

	n := 0;
	for (;;) {
		n = read(stdin, buf, NBUF);
		if (n <= 0)
			return;
		for (i := 0; i < n; i++) {
			c := buf[i] - byte ' ';
			if (int c >= 0 && int c < len buf)
				print("%s ", morse[int c]);
			else 
				print("\n");
		}
	}
}
